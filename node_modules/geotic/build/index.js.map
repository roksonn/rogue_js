{"version":3,"file":"index.js","sources":["../node_modules/camelcase/index.js","../src/Properties/Property.js","../src/Properties/SimpleProperty.js","../src/Properties/EntityProperty.js","../src/Properties/EntityArrayProperty.js","../src/Properties/PropertyFactory.js","../src/Component.js","../src/registries/ComponentRegistry.js","../node_modules/deepmerge/dist/cjs.js","../src/PrefabComponent.js","../src/Prefab.js","../src/registries/PrefabRegistry.js","../node_modules/nanoid/non-secure/index.js","../src/EntityEvent.js","../src/Entity.js","../src/registries/EntityRegistry.js","../src/Query.js","../src/registries/QueryRegistry.js","../src/Engine.js"],"sourcesContent":["'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","export default class Property {\n    component;\n\n    constructor(component) {\n        this.component = component;\n    }\n\n    get ecs() {\n        return this.component.ecs;\n    }\n\n    get descriptor() {\n        return {\n            enumerable: true,\n            get: () => this.get(),\n            set: (v) => this.set(v),\n        };\n    }\n\n    get() {\n        return undefined;\n    }\n\n    set(value) {}\n\n    serialize() {\n        return undefined;\n    }\n\n    onDestroyed() {}\n\n    cleanupReference(entity) {}\n}\n","import Property from './Property';\n\nexport default class SimpleProperty extends Property {\n    value = null;\n\n    set(value) {\n        this.value = value;\n    }\n\n    get() {\n        return this.value;\n    }\n\n    serialize() {\n        return this.value;\n    }\n}\n","import Property from './Property';\n\nexport default class EntityProperty extends Property {\n    id;\n\n    set(value) {\n        if (this.id && (!value || value.id !== this.id || value !== this.id)) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n\n        if (value && value.id) {\n            this.ecs.entities.addRef(value.id, this);\n            this.id = value.id;\n            return;\n        }\n\n        if (typeof value === 'string') {\n            this.ecs.entities.addRef(value, this);\n            this.id = value;\n            return;\n        }\n\n        this.id = undefined;\n    }\n\n    get() {\n        return this.id && this.component.ecs.getEntity(this.id);\n    }\n\n    serialize() {\n        return this.id;\n    }\n\n    onDestroyed() {\n        if (this.id) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n    }\n\n    cleanupReference(entity) {\n        if (this.id === entity.id) {\n            this.id = undefined;\n        } else {\n            console.warn(\n                `Property in unclean state. A reference to an entity \"${entity.id}\" was never cleaned up.`\n            );\n        }\n    }\n}\n","import Property from './Property';\n\nexport default class EntityArrayProperty extends Property {\n    proxy = [];\n\n    constructor(component) {\n        super(component);\n        this.proxy = new Proxy([], {\n            get: (target, prop, receiver) => {\n                return Reflect.get(target, prop, receiver);\n            },\n            set: (target, prop, value, receiver) => {\n                if (isNaN(prop)) {\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                const old = Reflect.get(target, prop, receiver);\n\n                if (typeof value === 'string') {\n                    value = this.ecs.entities.get(value);\n                }\n\n                if (old && old != value) {\n                    this.ecs.entities.removeRef(value, this);\n                }\n\n                if (value && value.id) {\n                    this.ecs.entities.addRef(value.id, this);\n\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                return Reflect.set(target, prop, value, receiver);\n            },\n            deleteProperty: (target, prop) => {\n                if (isNaN(prop)) {\n                    return Reflect.deleteProperty(target, prop);\n                }\n\n                const value = Reflect.get(target, prop);\n                this.ecs.entities.removeRef(value, this);\n\n                return Reflect.deleteProperty(target, prop);\n            },\n        });\n    }\n\n    set(values = []) {\n        const len = Math.max(values.length, this.proxy.length);\n\n        for (let i = 0; i < len; i++) {\n            if (i in values) {\n                this.proxy[i] = values[i];\n            } else {\n                delete this.proxy[i];\n            }\n        }\n\n        this.proxy.length = values.length;\n    }\n\n    get() {\n        return this.proxy;\n    }\n\n    serialize() {\n        return this.proxy.map((ref) => ref.id);\n    }\n\n    onDestroyed() {\n        this.set([]);\n    }\n\n    cleanupReference(entity) {\n        this.set(this.proxy.filter((ref) => ref.id !== entity.id));\n    }\n}\n","import Property from './Property';\nimport SimpleProperty from './SimpleProperty';\nimport EntityProperty from './EntityProperty';\nimport EntityArrayProperty from './EntityArrayProperty';\n\nexport default class PropertyStrategy {\n    static create(component, value) {\n        switch (value) {\n            case '<Entity>':\n                return new EntityProperty(component);\n            case '<EntityArray>':\n                return new EntityArrayProperty(component);\n            default:\n                return new SimpleProperty(component);\n        }\n    }\n}\n","import camelcase from 'camelcase';\r\nimport PropertyFactory from './Properties/PropertyFactory';\r\n\r\nexport default class Component {\r\n    #entity = null;\r\n    #ecs = null;\r\n    #props = {};\r\n    #isDestroyed = false;\r\n\r\n    static allowMultiple = false;\r\n    static keyProperty = null;\r\n    static properties = {};\r\n\r\n    static get type() {\r\n        return this.name;\r\n    }\r\n\r\n    get entity() {\r\n        return this.#entity;\r\n    }\r\n\r\n    get ecs() {\r\n        return this.#ecs;\r\n    }\r\n\r\n    get type() {\r\n        return this.constructor.name;\r\n    }\r\n\r\n    get isAttached() {\r\n        return Boolean(this.entity);\r\n    }\r\n\r\n    get isDestroyed() {\r\n        return this.#isDestroyed;\r\n    }\r\n\r\n    get allowMultiple() {\r\n        return this.constructor.allowMultiple;\r\n    }\r\n\r\n    get keyProperty() {\r\n        return this.constructor.keyProperty;\r\n    }\r\n\r\n    get properties() {\r\n        const ob = {};\r\n\r\n        for (const [key, value] of Object.entries(this.#props)) {\r\n            ob[key] = value.get();\r\n        }\r\n\r\n        return ob;\r\n    }\r\n\r\n    get key() {\r\n        return this[this.keyProperty];\r\n    }\r\n\r\n    constructor(ecs, properties = {}) {\r\n        this.#ecs = ecs;\r\n        this._defineProxies(properties);\r\n    }\r\n\r\n    serialize() {\r\n        return Object.entries(this.#props).reduce(\r\n            (o, [key, value]) => ({\r\n                ...o,\r\n                [key]: value.serialize(),\r\n            }),\r\n            {}\r\n        );\r\n    }\r\n\r\n    _onAttached(entity) {\r\n        this.#entity = entity;\r\n        this.ecs.queries.onComponentAdded(entity, this);\r\n        this.onAttached();\r\n    }\r\n\r\n    _onDetached() {\r\n        if (this.isAttached) {\r\n            this.onDetached();\r\n            const entity = this.#entity;\r\n\r\n            this.#entity = null;\r\n            this.ecs.queries.onComponentRemoved(entity, this);\r\n        }\r\n    }\r\n\r\n    _onDestroyed() {\r\n        this.#isDestroyed = true;\r\n        this.onDestroyed();\r\n\r\n        for (const prop of Object.values(this.#props)) {\r\n            prop.onDestroyed();\r\n        }\r\n    }\r\n\r\n    onAttached() {}\r\n\r\n    onDetached() {}\r\n\r\n    onDestroyed() {}\r\n\r\n    remove(destroy = true) {\r\n        if (this.isAttached) {\r\n            this.entity.remove(this);\r\n        }\r\n        if (destroy) {\r\n            this._onDestroyed();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.remove(true);\r\n    }\r\n\r\n    clone() {\r\n        return this.ecs.createComponent(\r\n            this.type,\r\n            this.serialize()\r\n        );\r\n    }\r\n\r\n    _onEvent(evt) {\r\n        this.onEvent(evt);\r\n\r\n        const handlerName = camelcase(`on ${evt.name}`);\r\n\r\n        if (typeof this[handlerName] === 'function') {\r\n            this[handlerName](evt);\r\n        }\r\n    }\r\n\r\n    onEvent(evt) {}\r\n\r\n    _defaultPropertyValue(propertyName) {\r\n        const value = this.constructor.properties[propertyName];\r\n\r\n        if (value === '<EntityArray>') {\r\n            return [];\r\n        }\r\n\r\n        if (value === '<Entity>') {\r\n            return undefined;\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    _defineProxies(initialProperties) {\r\n        for (const key in this.constructor.properties) {\r\n            const initialValue = initialProperties.hasOwnProperty(key)\r\n                ? initialProperties[key]\r\n                : this._defaultPropertyValue(key);\r\n            const property = PropertyFactory.create(\r\n                this,\r\n                this.constructor.properties[key]\r\n            );\r\n\r\n            this.#props[key] = property;\r\n            Object.defineProperty(this, key, property.descriptor);\r\n            property.set(initialValue);\r\n        }\r\n    }\r\n}\r\n","import Component from '../Component';\nimport camelcase from 'camelcase';\n\nexport default class ComponentRegistry {\n    #nameCache = new Map();\n    #definitions = new Map();\n    #ecs = null;\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    register(component) {\n        this.#definitions.set(component.name, component);\n        this.#nameCache.set(component.name, camelcase(component.name));\n    }\n\n    getAccessor(type) {\n        if (this.#nameCache.has(type)) {\n            return this.#nameCache.get(type);\n        }\n\n        this.#nameCache.set(type, camelcase(type));\n    }\n\n    get(typeOrClassOrComponent) {\n        const type = this._getType(typeOrClassOrComponent);\n\n        if (!type) {\n            console.warn(\n                `Cannot get component definition for type or class ${typeOrClassOrComponent} since it is neither a Component class or type (string)`\n            );\n            return null;\n        }\n\n        return this.#definitions.get(type);\n    }\n\n    create(typeOrClass, properties = {}) {\n        const definition = this.get(typeOrClass);\n\n        if (definition) {\n            return new definition(this.#ecs, properties);\n        }\n\n        console.warn(\n            `Could not create component definition for ${typeOrClass} since it is not registered`\n        );\n    }\n\n    _getType(typeOrClassOrComponent) {\n        if (typeof typeOrClassOrComponent === 'string') {\n            return typeOrClassOrComponent;\n        }\n\n        if (typeOrClassOrComponent instanceof Component) {\n            return typeOrClassOrComponent.type;\n        }\n\n        if (typeOrClassOrComponent.prototype instanceof Component) {\n            return typeOrClassOrComponent.name;\n        }\n\n        return null;\n    }\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\n\nexport default class PrefabComponent {\n    get type() {\n        return this.componentDef.type;\n    }\n\n    constructor(componentDef, properties = {}, overwrite = true) {\n        this.componentDef = componentDef;\n        this.properties = properties;\n        this.overwrite = overwrite;\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        if (!this.componentDef.allowMultiple && entity.has(this.componentDef)) {\n            if (this.overwrite) {\n                entity.remove(this.componentDef);\n            } else {\n                console.log(\n                    `Ignoring prefab component \"${this.type}\" since the entity \"${entity.id}\" already has one.`\n                );\n                return;\n            }\n        }\n\n        const props = merge(this.properties, initialProps);\n\n        entity.add(this.componentDef, props);\n    }\n}\n","export default class Prefab {\r\n    name = '';\r\n    inherit = [];\r\n    components = [];\r\n\r\n    constructor(ecs, name) {\r\n        this.ecs = ecs;\r\n        this.name = name;\r\n    }\r\n\r\n    addComponent(prefabComponent) {\r\n        this.components.push(prefabComponent);\r\n    }\r\n\r\n    applyToEntity(entity, initialProps = {}) {\r\n        this.inherit.forEach((parent) => {\r\n            parent.applyToEntity(entity, initialProps);\r\n        });\r\n\r\n        const arrComps = {};\r\n\r\n        this.components.forEach((component, i) => {\r\n            const definition = component.componentDef;\r\n            const accessor = this.ecs.components.getAccessor(definition.type);\r\n\r\n            let initialCompProps = {};\r\n\r\n            if (definition.allowMultiple) {\r\n                if (definition.keyProperty) {\r\n                    const key = component.properties[definition.keyProperty];\r\n\r\n                    if (\r\n                        initialProps[accessor] &&\r\n                        initialProps[accessor][key]\r\n                    ) {\r\n                        initialCompProps =\r\n                            initialProps[accessor][key];\r\n                    }\r\n                } else {\r\n                    if (!arrComps[accessor]) {\r\n                        arrComps[accessor] = 0;\r\n                    }\r\n\r\n                    if (\r\n                        initialProps[accessor] &&\r\n                        initialProps[accessor][\r\n                            arrComps[accessor]\r\n                        ]\r\n                    ) {\r\n                        initialCompProps =\r\n                            initialProps[accessor][\r\n                                arrComps[accessor]\r\n                            ];\r\n                    }\r\n\r\n                    arrComps[accessor]++;\r\n                }\r\n            } else {\r\n                initialCompProps = initialProps[accessor];\r\n            }\r\n\r\n            component.applyToEntity(entity, initialCompProps);\r\n        });\r\n\r\n        return entity;\r\n    }\r\n}\r\n","import Component from '../Component';\nimport PrefabComponent from '../PrefabComponent';\nimport Prefab from '../Prefab';\n\nexport default class PrefabRegistry {\n    #prefabs = {};\n    #ecs = null;\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    deserialize(data) {\n        const registered = this.get(data.name);\n\n        if (registered) {\n            return registered;\n        }\n\n        const prefab = new Prefab(this.#ecs, data.name);\n\n        let inherit;\n\n        if (Array.isArray(data.inherit)) {\n            inherit = data.inherit;\n        } else if (typeof data.inherit === 'string') {\n            inherit = [data.inherit];\n        } else {\n            inherit = [];\n        }\n\n        prefab.inherit = inherit.map((parent) => {\n            const ref = this.get(parent);\n\n            if (!ref) {\n                console.warn(\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\n                );\n                return parent;\n            }\n\n            return ref;\n        });\n\n        const comps = data.components || [];\n\n        for (const componentData of comps) {\n            if (\n                typeof componentData === 'string' ||\n                componentData.prototype instanceof Component\n            ) {\n                const def = this.#ecs.components.get(componentData);\n                if (def) {\n                    prefab.addComponent(new PrefabComponent(def));\n                }\n            } else if (typeof componentData === 'object') {\n                const type = componentData.type;\n                const def = this.#ecs.components.get(type);\n                if (def) {\n                    prefab.addComponent(\n                        new PrefabComponent(\n                            def,\n                            componentData.properties,\n                            componentData.overwrite\n                        )\n                    );\n                }\n            } else {\n                console.warn(\n                    `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\n                );\n            }\n        }\n\n        this.register(prefab);\n\n        return prefab;\n    }\n\n    register(prefab) {\n        this.#prefabs[prefab.name] = prefab;\n    }\n\n    get(nameOrClassOrPrefab) {\n        const name = PrefabRegistry._getName(nameOrClassOrPrefab);\n\n        return this.#prefabs[name];\n    }\n\n    create(nameOrClass, initialProps = {}) {\n        const prefab = this.get(nameOrClass);\n\n        if (!prefab) {\n            console.warn(\n                `Could not instantiate prefab for ${nameOrClass} since it is not registered`\n            );\n\n            return;\n        }\n\n        const entity = this.#ecs.createEntity();\n        prefab.applyToEntity(entity, initialProps);\n\n        return entity;\n    }\n\n    static _getName(nameOrClassOrPrefab) {\n        if (typeof nameOrClassOrPrefab === 'string') {\n            return nameOrClassOrPrefab;\n        }\n\n        if (nameOrClassOrPrefab instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        if (nameOrClassOrPrefab.prototype instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        return null;\n    }\n}\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[Math.random() * alphabet.length | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","export default class EntityEvent {\n    data = {};\n    #prevented = false;\n    #handled = false;\n\n    get prevented() {\n        return this.#prevented;\n    }\n\n    get handled() {\n        return this.#handled;\n    }\n\n    constructor(name, data = {}) {\n        this.name = name;\n        this.data = data;\n    }\n\n    is(name) {\n        return this.name === name;\n    }\n\n    handle() {\n        this.#handled = true;\n        this.#prevented = true;\n    }\n\n    prevent() {\n        this.#prevented = true;\n    }\n}\n","import Component from './Component';\r\nimport EntityEvent from './EntityEvent';\r\n\r\nexport default class Entity {\r\n    #id = null;\r\n    #components = {};\r\n    #ecs = null;\r\n    #isDestroyed = false;\r\n\r\n    get ecs() {\r\n        return this.#ecs;\r\n    }\r\n\r\n    get components() {\r\n        return this.#components;\r\n    }\r\n\r\n    get isDestroyed() {\r\n        return this.#isDestroyed;\r\n    }\r\n\r\n    constructor(ecs, id = null) {\r\n        this.#ecs = ecs;\r\n        this.#id = id || ecs.generateId();\r\n        Object.defineProperty(this, 'id', {\r\n            value: this.#id,\r\n            enumerable: true,\r\n            writable: false,\r\n        });\r\n    }\r\n\r\n    has(typeOrClass, key = null) {\r\n        const type = this.ecs.components._getType(typeOrClass);\r\n        const accessor = this.ecs.components.getAccessor(type);\r\n        const hasType = this.hasOwnProperty(accessor);\r\n\r\n        if (hasType && key) {\r\n            return this[accessor].hasOwnProperty(key);\r\n        }\r\n\r\n        return hasType;\r\n    }\r\n\r\n    get(typeOrClass, key = null) {\r\n        const type = this.ecs.components._getType(typeOrClass);\r\n        const accessor = this.ecs.components.getAccessor(type);\r\n        const components = this[accessor];\r\n\r\n        if (components && key) {\r\n            return components[key];\r\n        }\r\n\r\n        return components;\r\n    }\r\n\r\n    destroy() {\r\n        this.#isDestroyed = true;\r\n\r\n        for (const component of Object.values(this.components)) {\r\n            if (component instanceof Component) {\r\n                component.destroy();\r\n            } else {\r\n                for (const nestedComponent of Object.values(component)) {\r\n                    nestedComponent.destroy();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.ecs.entities.onEntityDestroyed(this);\r\n    }\r\n\r\n    add(typeOrClass, properties = {}) {\r\n        const component = this.ecs.components.create(typeOrClass, properties);\r\n\r\n        if (!component) {\r\n            console.warn(\r\n                `\"${typeOrClass}\" component cannot be added, since it is not registered.`\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return this.attach(component);\r\n    }\r\n\r\n    attach(component) {\r\n        const accessor = this.ecs.components.getAccessor(component.type);\r\n\r\n        if (!component.allowMultiple) {\r\n            if (this.has(component.type)) {\r\n                console.warn(\r\n                    `\"${component.type}\" component has allowMultiple set to ${component.allowMultiple}. Trying to add a \"${component.type}\" component to an entity which already has one.`\r\n                );\r\n                return false;\r\n            }\r\n\r\n            this.components[accessor] = component;\r\n\r\n            Object.defineProperty(this, accessor, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get() {\r\n                    return this.components[accessor];\r\n                },\r\n            });\r\n\r\n            component._onAttached(this);\r\n            this.ecs.queries.onComponentAdded(this);\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!component.keyProperty) {\r\n            if (!this.components[accessor]) {\r\n                this.components[accessor] = [];\r\n                Object.defineProperty(this, accessor, {\r\n                    configurable: true,\r\n                    enumerable: true,\r\n                    get() {\r\n                        return this.components[accessor];\r\n                    },\r\n                });\r\n            }\r\n\r\n            this.components[accessor].push(component);\r\n\r\n            component._onAttached(this);\r\n            this.ecs.queries.onComponentAdded(this);\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!component.key) {\r\n            console.warn(\r\n                `\"${component.type}\" component has a falsy key of \"${component.key}\". The keyProperty is set to \"${component.keyProperty}\".`\r\n            );\r\n            return false;\r\n        }\r\n\r\n        if (!this.components[accessor]) {\r\n            this.components[accessor] = {};\r\n            Object.defineProperty(this, accessor, {\r\n                configurable: true,\r\n                enumerable: true,\r\n                get() {\r\n                    return this.components[accessor];\r\n                },\r\n            });\r\n        }\r\n\r\n        this.components[accessor][component.key] = component;\r\n\r\n        component._onAttached(this);\r\n        this.ecs.queries.onComponentAdded(this, component);\r\n\r\n        return true;\r\n    }\r\n\r\n    owns(component) {\r\n        return component.entity === this;\r\n    }\r\n\r\n    remove(typeOrClassOrComponent, key = null) {\r\n        const isComponent = typeOrClassOrComponent instanceof Component;\r\n        key = isComponent ? typeOrClassOrComponent.key : key;\r\n\r\n        const definition = this.ecs.components.get(typeOrClassOrComponent);\r\n\r\n        const accessor = this.ecs.components.getAccessor(definition.type);\r\n\r\n        if (definition.allowMultiple) {\r\n            if (!definition.keyProperty) {\r\n                if (isComponent) {\r\n                    const all = this.components[accessor];\r\n\r\n                    if (!all) {\r\n                        console.warn(\r\n                            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\r\n                        );\r\n                        return;\r\n                    }\r\n\r\n                    const index = all.indexOf(typeOrClassOrComponent);\r\n\r\n                    if (index > -1) {\r\n                        all.splice(index, 1);\r\n                        typeOrClassOrComponent._onDetached();\r\n\r\n                        if (all.length === 0) {\r\n                            delete this[accessor];\r\n                            delete this.components[accessor];\r\n                        }\r\n\r\n                        this.ecs.queries.onComponentRemoved(this);\r\n\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    for (const instance of this.components[accessor]) {\r\n                        instance._onDetached();\r\n                    }\r\n\r\n                    delete this[accessor];\r\n                    delete this.components[accessor];\r\n                    this.ecs.queries.onComponentRemoved(this);\r\n\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            if (!key) {\r\n                console.warn(\r\n                    `Trying to remove a \"${definition.type}\" component which allows multiple without specifying an key.`\r\n                );\r\n                return;\r\n            }\r\n\r\n            const all = this.components[accessor];\r\n            const component = all[key];\r\n\r\n            if (component) {\r\n                delete all[key];\r\n                component._onDetached();\r\n                if (Object.keys(all).length <= 0) {\r\n                    delete this[accessor];\r\n                    delete this.components[accessor];\r\n                }\r\n                this.ecs.queries.onComponentRemoved(this);\r\n\r\n                return component;\r\n            } else {\r\n                console.warn(\r\n                    `Trying to remove a \"${definition.type}\" component from an entity at \"${key}\", but it wasn't found.`\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (accessor in this) {\r\n            const component = this.components[accessor];\r\n\r\n            delete this[accessor];\r\n            delete this.components[accessor];\r\n            component._onDetached();\r\n            this.ecs.queries.onComponentRemoved(this);\r\n\r\n            return component;\r\n        }\r\n\r\n        console.warn(\r\n            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\r\n        );\r\n    }\r\n\r\n    serialize() {\r\n        return Object.entries(this.components).reduce(\r\n            (o, [key, value]) => {\r\n                if (value instanceof Component) {\r\n                    return {\r\n                        ...o,\r\n                        [key]: value.serialize(),\r\n                    };\r\n                }\r\n\r\n                if (Array.isArray(value)) {\r\n                    return {\r\n                        ...o,\r\n                        [key]: value.map((v) => v.serialize()),\r\n                    };\r\n                }\r\n\r\n                return {\r\n                    ...o,\r\n                    [key]: Object.entries(value).reduce(\r\n                        (o2, [k2, v2]) => ({\r\n                            ...o2,\r\n                            [k2]: v2.serialize(),\r\n                        }),\r\n                        {}\r\n                    ),\r\n                };\r\n            },\r\n            {\r\n                id: this.id,\r\n            }\r\n        );\r\n    }\r\n\r\n    fireEvent(name, data) {\r\n        const evt = new EntityEvent(name, data);\r\n\r\n        for (const component of Object.values(this.components)) {\r\n            if (component instanceof Component) {\r\n                component._onEvent(evt);\r\n\r\n                if (evt.prevented) {\r\n                    return evt;\r\n                }\r\n            } else {\r\n                for (const nestedComponent of Object.values(component)) {\r\n                    nestedComponent._onEvent(evt);\r\n\r\n                    if (evt.prevented) {\r\n                        return evt;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return evt;\r\n    }\r\n}\r\n","import Entity from '../Entity';\nimport camelcase from 'camelcase';\n\nexport default class EntityRegistry {\n    #entities = new Map();\n    #ecs = null;\n    #refs = new Map();\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    get all() {\n        return this.#entities.values();\n    }\n\n    register(entity) {\n        this.#entities.set(entity.id, entity);\n\n        return entity;\n    }\n\n    get(id) {\n        return this.#entities.get(id);\n    }\n\n    createOrGetById(id) {\n        const entity = this.get(id);\n\n        if (entity) {\n            return entity;\n        }\n\n        return this.create(id);\n    }\n\n    create(id = undefined) {\n        const entity = new Entity(this.#ecs, id);\n\n        this.register(entity);\n\n        this.#ecs.queries.onEntityCreated(entity);\n\n        return entity;\n    }\n\n    destroy(entity) {\n        entity.destroy();\n    }\n\n    onEntityDestroyed(entity) {\n        this.cleanupRefs(entity);\n        this.#entities.delete(entity.id);\n        this.#ecs.queries.onEntityDestroyed(entity);\n    }\n\n    cleanupRefs(entity) {\n        const refs = this.#refs.get(entity.id);\n\n        if (!refs) {\n            return;\n        }\n\n        for (const ref of refs) {\n            ref.cleanupReference(entity);\n        }\n\n        delete this.#refs[entity.id];\n    }\n\n    addRef(entityId, property) {\n        if (!this.#refs.has(entityId)) {\n            this.#refs.set(entityId, new Set([property]));\n            return;\n        }\n\n        this.#refs.get(entityId).add(property);\n    }\n\n    removeRef(entityId, property) {\n        if (this.#refs.has(entityId)) {\n            this.#refs.get(entityId).delete(property);\n        }\n    }\n\n    serialize() {\n        const json = [];\n\n        this.#entities.forEach((entity) => {\n            json.push(entity.serialize());\n        });\n\n        return json;\n    }\n\n    deserialize(data) {\n        for (const entityData of data.entities) {\n            this.createOrGetById(entityData.id);\n        }\n\n        for (const entityData of data.entities) {\n            this.deserializeEntity(entityData);\n        }\n    }\n\n    deserializeEntity(data) {\n        const { id, ...componentData } = data;\n        const entity = this.createOrGetById(id);\n\n        Object.entries(componentData).forEach(([key, value]) => {\n            const type = camelcase(key, { pascalCase: true });\n            const definition = this.#ecs.components.get(type);\n\n            if (definition.allowMultiple) {\n                Object.values(value).forEach((d) => {\n                    entity.add(definition, d);\n                });\n            } else {\n                entity.add(definition, value);\n            }\n        });\n    }\n}\n","import merge from 'deepmerge';\n\nexport default class Query {\n    #ecs;\n    #filter;\n    #cache = new Set();\n\n    constructor(ecs, filter = {}) {\n        this.#ecs = ecs;\n        this.#filter = merge({ any: [], all: [], none: [] }, filter);\n        this.bustCache();\n    }\n\n    isMatch(entity) {\n        const hasAny = this.#filter.any.length\n            ? this.#filter.any.some((c) => entity.has(c))\n            : true;\n        const hasAll = this.#filter.all.every((c) => entity.has(c));\n        const hasNone = !this.#filter.none.some((c) => entity.has(c));\n\n        return hasAny && hasAll && hasNone;\n    }\n\n    candidate(entity) {\n        if (this.isMatch(entity)) {\n            this.#cache.add(entity);\n            return true;\n        }\n\n        this.#cache.delete(entity);\n        return false;\n    }\n\n    _onEntityCreated(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentAdded(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentRemoved(entity) {\n        this.candidate(entity);\n    }\n\n    _onEntityDestroyed(entity) {\n        this.#cache.delete(entity);\n    }\n\n    bustCache() {\n        this.#cache.clear();\n\n        for (const entity of this.#ecs.entities.all) {\n            this.candidate(entity);\n        }\n\n        return this.#cache;\n    }\n\n    get() {\n        return this.#cache;\n    }\n}\n","import Query from '../Query';\n\nexport default class QueryRegistry {\n    #ecs;\n    #queries = [];\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    create(filters) {\n        const query = new Query(this.#ecs, filters);\n\n        this.#queries.push(query);\n\n        return query;\n    }\n\n    onComponentAdded(entity) {\n        this.#queries.forEach((query) => query._onComponentAdded(entity));\n    }\n\n    onComponentRemoved(entity) {\n        this.#queries.forEach((query) => query._onComponentRemoved(entity));\n    }\n\n    onEntityCreated(entity) {\n        this.#queries.forEach((query) => query._onEntityCreated(entity));\n    }\n\n    onEntityDestroyed(entity) {\n        this.#queries.forEach((query) => query._onEntityDestroyed(entity));\n    }\n}\n","import ComponentRegistry from './registries/ComponentRegistry';\nimport PrefabRegistry from './registries/PrefabRegistry';\nimport { nanoid } from 'nanoid/non-secure';\nimport EntityRegistry from './registries/EntityRegistry';\nimport QueryRegistry from './registries/QueryRegistry';\n\nexport default class Engine {\n    constructor() {\n        this.idGenerator = () => nanoid();\n        this.components = new ComponentRegistry(this);\n        this.prefabs = new PrefabRegistry(this);\n        this.entities = new EntityRegistry(this);\n        this.queries = new QueryRegistry(this);\n    }\n\n    generateId() {\n        return this.idGenerator();\n    }\n\n    createEntity() {\n        return this.entities.create();\n    }\n\n    createPrefab(nameOrClass, initialProps = {}) {\n        return this.prefabs.create(nameOrClass, initialProps);\n    }\n\n    destroyEntity(entity) {\n        return this.entities.destroy(entity);\n    }\n\n    registerPrefab(data) {\n        this.prefabs.deserialize(data);\n    }\n\n    registerComponent(component) {\n        this.components.register(component);\n    }\n\n    getEntity(id) {\n        return this.entities.get(id);\n    }\n\n    createComponent(type, properties) {\n        return this.components.create(type, properties);\n    }\n\n    createQuery(filters) {\n        return this.queries.create(filters);\n    }\n\n    serialize() {\n        return {\n            entities: this.entities.serialize(),\n        };\n    }\n\n    deserialize(data) {\n        if (data.id) {\n            return this.entities.deserializeEntity(data);\n        }\n\n        return this.entities.deserialize(data);\n    }\n}\n"],"names":["preserveCamelCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","length","character","test","slice","toLocaleLowerCase","toLocaleUpperCase","camelCase","input","options","Array","isArray","TypeError","pascalCase","postProcess","x","charAt","map","trim","filter","join","hasUpperCase","replace","_","p1","m","module","Property","constructor","component","ecs","descriptor","enumerable","get","set","v","undefined","value","serialize","onDestroyed","cleanupReference","entity","SimpleProperty","EntityProperty","id","entities","removeRef","addRef","getEntity","console","warn","EntityArrayProperty","proxy","Proxy","target","prop","receiver","Reflect","isNaN","old","deleteProperty","values","len","Math","max","ref","PropertyStrategy","create","Component","type","name","isAttached","Boolean","isDestroyed","allowMultiple","keyProperty","properties","ob","key","Object","entries","_defineProxies","reduce","o","_onAttached","queries","onComponentAdded","onAttached","_onDetached","onDetached","onComponentRemoved","_onDestroyed","remove","destroy","clone","createComponent","_onEvent","evt","onEvent","handlerName","camelcase","_defaultPropertyValue","propertyName","initialProperties","initialValue","hasOwnProperty","property","PropertyFactory","defineProperty","ComponentRegistry","Map","register","getAccessor","has","typeOrClassOrComponent","_getType","typeOrClass","definition","prototype","isMergeableObject","isNonNullObject","isSpecial","stringValue","toString","call","isReactElement","canUseSymbol","Symbol","for","REACT_ELEMENT_TYPE","$$typeof","emptyTarget","val","cloneUnlessOtherwiseSpecified","deepmerge","defaultArrayMerge","source","concat","element","getMergeFunction","customMerge","getEnumerableOwnPropertySymbols","getOwnPropertySymbols","symbol","propertyIsEnumerable","getKeys","keys","propertyIsOnObject","object","propertyIsUnsafe","mergeObject","destination","forEach","arrayMerge","sourceIsArray","targetIsArray","sourceAndTargetTypesMatch","all","deepmergeAll","array","Error","prev","next","deepmerge_1","PrefabComponent","componentDef","overwrite","applyToEntity","initialProps","log","props","merge","add","Prefab","addComponent","prefabComponent","components","push","inherit","parent","arrComps","accessor","initialCompProps","PrefabRegistry","deserialize","data","registered","prefab","comps","componentData","def","nameOrClassOrPrefab","_getName","nameOrClass","createEntity","urlAlphabet","nanoid","size","random","EntityEvent","prevented","handled","is","handle","prevent","Entity","generateId","writable","hasType","nestedComponent","onEntityDestroyed","attach","configurable","owns","isComponent","index","indexOf","splice","instance","o2","k2","v2","fireEvent","EntityRegistry","createOrGetById","onEntityCreated","cleanupRefs","delete","refs","entityId","Set","json","entityData","deserializeEntity","d","Query","any","none","bustCache","isMatch","hasAny","some","c","hasAll","every","hasNone","candidate","_onEntityCreated","_onComponentAdded","_onComponentRemoved","_onEntityDestroyed","clear","QueryRegistry","filters","query","Engine","idGenerator","prefabs","createPrefab","destroyEntity","registerPrefab","registerComponent","createQuery"],"mappings":"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"}